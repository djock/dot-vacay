@using DotVacay.Core.Enums
@model DotVacay.Web.Models.CreatePointOfInterestViewModel

<div class="container mt-2 mb-2" style="max-width:400px; margin:auto;">
    <form asp-controller="Trip" asp-action="AddPointOfInterest" method="post">
        <input type="hidden" name="tripId" value="@ViewData["TripId"]" />
        <div class="mb-3">
            <label asp-for="Title" class="form-label">Title</label>
            <input asp-for="Title" class="form-control" placeholder="Point of Interest Title" required />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Description" class="form-label">Description</label>
            <textarea asp-for="Description" class="form-control" placeholder="Description" rows="3"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Type" class="form-label">Type</label>
            <select asp-for="Type" class="form-select" required>
                <option value="">Select type...</option>
                @foreach (var type in Enum.GetValues<PointOfInterestType>())
                {
                    <option value="@type">@type</option>
                }
            </select>
            <span asp-validation-for="Type" class="text-danger"></span>
        </div>
        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="StartDate" class="form-label">Start Time</label>
                <input asp-for="StartDate" type="datetime-local" class="form-control" required />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="EndDate" class="form-label">End Time</label>
                <input asp-for="EndDate" type="datetime-local" class="form-control" required />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
        </div>
        <div class="modal-footer px-0 pb-0">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            const startDateInput = document.querySelector('input[name="StartDate"]');
            const endDateInput = document.querySelector('input[name="EndDate"]');

            // Format current date for date input
            const formatDate = (date) => {
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                const hours = String(date.getHours()).padStart(2, '0');
                const minutes = String(date.getMinutes()).padStart(2, '0');
                return `${year}-${month}-${day}T${hours}:${minutes}`;
            };

            // Set default dates
            const now = new Date();
            startDateInput.value = formatDate(now);
            startDateInput.min = formatDate(now);
            
            const endDate = new Date(now);
            endDate.setHours(endDate.getHours() + 1);
            endDateInput.value = formatDate(endDate);
            endDateInput.min = startDateInput.value;

            // Add validation to ensure end date is after start date
            startDateInput.addEventListener('change', function() {
                endDateInput.min = this.value;
                const startDate = new Date(this.value);
                const endDate = new Date(endDateInput.value);
                
                if (endDate <= startDate) {
                    const newEndDate = new Date(startDate);
                    newEndDate.setHours(startDate.getHours() + 1);
                    endDateInput.value = formatDate(newEndDate);
                }
            });
        });
    </script>
} 